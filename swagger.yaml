swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: >
    Contains all available API endpoints in this codebase. This API allows users to sign up, log in, and manage their financial transactions. Users can retrieve, update, and view transactions, as well as fetch transactions for the current month grouped by account. All transaction endpoints require authentication via a bearer token and the userId to ensure that only the active user's transactions are accessed.
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /users/{userId}/transactions/current_month:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get Transactions for Current Month Grouped by Account
      description: API for fetching all transactions for the current month for the specified user, grouped by account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: userId
          description: ID of the user
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully and grouped by account
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized - Invalid or expired token
        '403':
          description: Forbidden - Insufficient token permissions
        '500':
          description: Internal Server Error

  /users/{userId}/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Transaction Details
      description: API for fetching transaction details for the specified user
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: userId
          description: ID of the user
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transaction retrieved successfully
          schema:
            $ref: '#/definitions/TransactionDetail'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized - Invalid or expired token
        '403':
          description: Forbidden - Insufficient token permissions
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    patch:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update Transaction
      description: API for updating a transaction for the specified user
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: userId
          description: ID of the user
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the transaction to update
          required: true
          type: string
        - in: body
          name: body
          description: Fields to update in the transaction
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/TransactionDetail'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized - Invalid or expired token
        '403':
          description: Forbidden - Insufficient token permissions
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
        description: HTTP status code
      message:
        type: string
        description: Response message
  LoginResponse:
    type: object
    properties:
      token:
        type: string
        description: JWT token
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transaction:
    type: object
    properties:
      transactionId:
        type: string
        description: Transaction ID
      date:
        type: string
        description: Date of the transaction
      description:
        type: string
        description: Description of the transaction
      amount:
        type: string
        description: Amount of the transaction
      balance:
        type: string
        description: Balance after transaction
      accountId:
        type: string
        description: ID of the account associated with the transaction
  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
        description: Category of the transaction (e.g. Food, Transport, Entertainment)
      notes:
        type: string
        description: Additional notes for the transaction
  TransactionDetail:
    type: object
    properties:
      transactionId:
        type: string
        description: Transaction ID
      date:
        type: string
        description: Date of the transaction
      description:
        type: string
        description: Description of the transaction
      amount:
        type: string
        description: Amount of the transaction
      balance:
        type: string
        description: Balance after transaction
      type:
        type: string
        description: Type of the transaction (e.g. Electronic, Cash)
      category:
        type: string
        description: Category of the transaction (e.g. Food, Transport, Entertainment)
      notes:
        type: string
        description: Additional notes for the transaction
